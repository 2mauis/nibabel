
Yarik's wishes sorted - please remove or fulfill:

- too much automation or "where is my saveMyAss" ;-)
  .save() should accept filetype parameter, which would override the
   logic in setFilename (if not None)

   filetype can be either specified by
    nifticlib.NIFTI_FTYPE_* or may be human readable strings (ANALYZE,
    NIFTI, etc)

- as it is now: getHeader returns a header dictionary which is not
   binded to the object. so direct manipulation to it such as

   inNifti.header['bla']='bleh'
   are lost and the only way to introduce a change to the field seems
   to operate as
   h = inNifti.header
   h['bla'] = 'bleh'
   inNifti.header = h
   which is at least should be documented in capital letters! ;-)

   Proposed solution:

   introduce private __header, which would result in singleton behavior
   of getHeader -- on first call it does all the querying from
   self.__nimg and nhdr2dict,
   but on consequtive calls - simply return __header.

   may be nhdr (result of _nim2nhdr) should be also stored as __nhdr
   to avoid consequtive invocations of a costly function

    Then updateHeader should
    * allow not specified hdrdict (default to None)
    * not query __nimg if __header/__nhdr is not None
      and simply use nhdr=self.__nhdr
    * if hdrdict=None (ie not specified) make a copy
      hdrdict == self.__header.copy(), so del commands
      dont' do evil things, and proceed further ;-)

   save method also should invoke updateHeader I guess so that if
   there were any changes to the header dictionary, they get saved..

Possibly wrong/incorrect/wontfix suggestions:

- [gs]etVoxDims should work with all dimensions up to 7 as they are
   defined in nifti1_io.h
   hanke: maybe, but that would mix different units, which I'd rather not do.


DONE:

- dims/shape property for NiftiImage

- timepoints property
   yoh: made initial attempt to accomplish the mission. Check diff to
   237
   hanke: Mission accomplished ;)
